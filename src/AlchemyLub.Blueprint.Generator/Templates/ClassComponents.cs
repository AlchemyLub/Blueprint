namespace AlchemyLub.Blueprint.Generator.Templates;

internal static class ClassComponents
{
    internal const string ExtensionClassHead =
"""
// <auto-generated />

#nullable enable

using System;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

namespace CustomNamespace
{
    public static class DecoratorsExtensions_generated
    {
        /// <summary>
        /// Автоматически регистрирует декораторы для сервисов, которые помечены атрибутом <see cref="DecoratorAttribute"/>
        /// </summary>
        /// <param name="services"><see cref="IServiceCollection"/></param>
        /// <param name="decoratorsConfigurator">
        /// Конфигуратор декораторов. Можно задать, какие декораторы включены, какие нет. Ключи - имена декораторов, значения - включены или нет.
        /// Если не задан, то все декораторы включены
        /// </param>
        /// <returns></returns>
        public static IServiceCollection AddDecorators(
            this IServiceCollection services,
            Dictionary<string, bool>? decoratorsConfigurator = null)
        {
""";

    internal const string ExtensionClassBasement =
"""
            return services;
        }
    }
}
""";
}
